local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local S_T = game:GetService("TeleportService")
local S_H = game:GetService("HttpService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local File = pcall(function()
    AllIDs = S_H:JSONDecode(readfile("server-hop-temp.json"))
end)

if not File then
    table.insert(AllIDs, actualHour)
    pcall(function()
        writefile("server-hop-temp.json", S_H:JSONEncode(AllIDs))
    end)
end

local function TPReturner(placeId)
    local Site
    if foundAnything == "" then
        Site = S_H:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. placeId .. '/servers/Public?sortOrder=Desc&limit=100'))
    else
        Site = S_H:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. placeId .. '/servers/Public?sortOrder=Desc&limit=100&cursor=' .. foundAnything))
    end

    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end

    local selectedServer
    local maxPlayersCount = -1

    for i, v in pairs(Site.data) do
        local ID = tostring(v.id)
        local possible = true

        if tonumber(v.playing) < tonumber(v.maxPlayers) then
            for _, existing in pairs(AllIDs) do
                if ID == tostring(existing) then
                    possible = false
                    break
                end
            end

            if possible and tonumber(v.playing) > maxPlayersCount then
                maxPlayersCount = tonumber(v.playing)
                selectedServer = ID
            end
        end
    end

    if selectedServer then
        table.insert(AllIDs, selectedServer)
        pcall(function()
            writefile("server-hop-temp.json", S_H:JSONEncode(AllIDs))
        end)

        local currentJobId = LocalPlayer.JobId -- เก็บ JobId ปัจจุบัน
        S_T:TeleportToPlaceInstance(placeId, selectedServer, LocalPlayer)
        
        wait(2)
        if LocalPlayer.JobId == currentJobId then
            TPReturner(placeId)
        end
    end
end

local module = {}
function module:Teleport(placeId)
    while wait() do
        pcall(function()
            TPReturner(placeId)
            if foundAnything ~= "" then
                TPReturner(placeId)
            end
        end)
    end
end

return module
