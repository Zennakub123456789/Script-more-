local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local HRP = LocalPlayer.Character:WaitForChild("HumanoidRootPart")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")

local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

WindUI:SetNotificationLower(true)

local Window = WindUI:CreateWindow({
    Title = "Tad Hub | Universe | 0.0.2",
    Icon = "door-open",
    Author = "By Tad Hub",
    Folder = "TadHub",
    Size = UDim2.fromOffset(550, 350),
    Transparent = true,
    Theme = "Dark",
    Resizable = true,
    SideBarWidth = 200,
    Background = "", -- rbxassetid only
    BackgroundImageTransparency = 0.42,
    HideSearchBar = true,
    ScrollBarEnabled = false,
    User = {
        Enabled = true,
        Anonymous = true,
        Callback = function()
            print("clicked")
        end,
    },
})

Window:EditOpenButton({
    Title = "Open Example UI",
    Icon = "monitor",
    CornerRadius = UDim.new(0,16),
    StrokeThickness = 2,
    Color = ColorSequence.new( -- gradient
        Color3.fromHex("FF0F7B"), 
        Color3.fromHex("F89B29")
    ),
    OnlyMobile = false,
    Enabled = true,
    Draggable = true,
})

Window:IsResizable(true)

Window:SetToggleKey(Enum.KeyCode.H)

local Tab = Window:Tab({
    Title = "Main",
    Icon = "bird",
    Locked = false,
})
local Section = Tab:Section({ 
    Title = "Status:",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

local placeId = game.PlaceId
local filePath = "Waypoints/" .. tostring(placeId) .. "/data.json"
local mapName = game:GetService("MarketplaceService"):GetProductInfo(placeId).Name

local Button

Button = Tab:Button({
    Title = mapName,
    Desc = "Loading...",
    Locked = true,
})

if isfile(filePath) then
    Button:SetDesc("This Game Have Waypoints file")
else
    Button:SetDesc("This map does not have Waypoints file yet.")
end

local Section = Tab:Section({ 
    Title = "Setup Waypoints",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

local Waypoints = {}
local SelectedWaypointTeleport = nil
local SelectedWaypointDelete = nil
local WaypointName = ""

local DropdownTeleport = nil
local DropdownDelete = nil

local SelectedWaypointDelete = nil

local function UpdateDropdowns()
    local names = {}
    for _, wp in pairs(Waypoints) do
        if typeof(wp) == "table" and typeof(wp.Name) == "string" then
            table.insert(names, wp.Name)
        end
    end
    if DropdownTeleport then
        DropdownTeleport:Refresh(names)
    end
    if DropdownDelete then
        DropdownDelete:Refresh(names)
    end
end

Tab:Input({
    Title = "üìù Waypoints Name",
    Desc = "Set Name Your want ",
    Placeholder = "input here",
    Callback = function(text)
        WaypointName = text
    end
})

Tab:Button({
    Title = "‚ûï Set Waypoint",
    Desc = "Save your location",
    Callback = function()
        if WaypointName == "" then
            WindUI:Notify({
                Title = "Not yet named",
                Content = "Please enter your name before saving.",
                Icon = "type",
                Duration = 4,
            })
            return
        end

        table.insert(Waypoints, {Name = WaypointName, Pos = LocalPlayer.Character:FindFirstChild("HumanoidRootPart").Position})
        WaypointName = ""
        UpdateDropdowns()

        WindUI:Notify({
            Title = "Save successful",
            Content = "New waypoints added",
            Icon = "check-circle",
            Duration = 3,
        })
    end
})

Tab:Button({
    Title = "üíæ Save Waypoints to a file",
    Desc = "Click to save all to a JSON file and if you have deleted Waypoints, click to save again. (Must do)",
    Callback = function()
        if #Waypoints == 0 then
            WindUI:Notify({
                Title = "‚ö†Ô∏è No Information",
                Content = "There are no waypoints to save.",
                Icon = "alert-circle",
                Duration = 3,
            })
            return
        end

        if not isfolder("Waypoints") then
            makefolder("Waypoints")
        end

        local placeFolder = "Waypoints/" .. tostring(game.PlaceId)
        if not isfolder(placeFolder) then
            makefolder(placeFolder)
        end

        local filePath = placeFolder .. "/data.json"

        local data = {}
        for _, wp in pairs(Waypoints) do
            table.insert(data, {
                Name = wp.Name,
                Pos = {x = wp.Pos.X, y = wp.Pos.Y, z = wp.Pos.Z}
            })
        end

        local success, result = pcall(function()
            writefile(filePath, game:GetService("HttpService"):JSONEncode(data))
        end)

        if success then
            WindUI:Notify({
                Title = "‚úÖ Save successful",
                Content = "Waypoints Save at:\n" .. filePath,
                Icon = "save",
                Duration = 4,
            })
        else
            WindUI:Notify({
                Title = "‚ùå Save failed",
                Content = "Error: " .. tostring(result),
                Icon = "x",
                Duration = 4,
            })
        end
    end
})

local Section = Tab:Section({ 
    Title = "Waypoints",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

DropdownTeleport = Tab:Dropdown({
    Title = "üöÄ Select the location to teleport",
    Values = {},
    Value = nil,
    Callback = function(option)
        SelectedWaypointTeleport = option
    end
})

Tab:Button({
    Title = "üì¶ Teleport to Waypoint",
    Desc = "Teleport to the selected Waypoints",
    Callback = function()
        local character = LocalPlayer.Character
        if not character then
            WindUI:Notify({
                Title = "error",
                Content = "No characters yet",
                Icon = "alert-triangle",
                Duration = 4,
            })
            return
        end

        local HRP = character:FindFirstChild("HumanoidRootPart")
        if not HRP then
            WindUI:Notify({
                Title = "error",
                Content = "HumanoidRootPart not found",
                Icon = "alert-triangle",
                Duration = 4,
            })
            return
        end

        for _, wp in pairs(Waypoints) do
            if wp.Name == SelectedWaypointTeleport then
                HRP.CFrame = CFrame.new(wp.Pos)
                WindUI:Notify({
                    Title = "Teleport successful",
                    Content = "You have been Teleport to: " .. wp.Name,
                    Icon = "map-pin",
                    Duration = 4,
                })
                return
            end
        end

        WindUI:Notify({
            Title = "Waypoints not yet selected",
            Content = "Please select a waypoint before teleport.",
            Icon = "target",
            Duration = 4,
        })
    end
})

local Section = Tab:Section({ 
    Title = "Remove Waypoints",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

DropdownDelete = Tab:Dropdown({
    Title = "üóëÔ∏è Select the waypoints to delete.",
    Values = {},
    Value = nil,
    Callback = function(option)
        SelectedWaypointDelete = option
    end
})

Tab:Button({
    Title = "‚ùå Delete the selected waypoints",
    Desc = "Delete the selected Waypoints from the delete list. Please go back and save it.",
    Callback = function()
        for i, wp in pairs(Waypoints) do
            if wp.Name == SelectedWaypointDelete then
                table.remove(Waypoints, i)
                SelectedWaypointDelete = nil
                SelectedWaypointTeleport = nil
                UpdateDropdowns()

                WindUI:Notify({
                    Title = "Delete successfully",
                    Content = "Waypoints has been successfully deleted.",
                    Icon = "trash",
                    Duration = 3,
                })
                return
            end
        end

        WindUI:Notify({
            Title = "Waypoints not yet selected",
            Content = "Please select the waypoints to delete.",
            Icon = "target",
            Duration = 4,
        })
    end
})

do
    local placeFolder = "Waypoints/" .. tostring(game.PlaceId)
    local filePath = placeFolder .. "/data.json"

    if isfile(filePath) then
        local content = readfile(filePath)
        local success, data = pcall(function()
            return game:GetService("HttpService"):JSONDecode(content)
        end)

        if success and typeof(data) == "table" then
            table.clear(Waypoints)

            for _, wp in pairs(data) do
                if wp.Name and wp.Pos then
                    table.insert(Waypoints, {
                        Name = wp.Name,
                        Pos = Vector3.new(wp.Pos.x, wp.Pos.y, wp.Pos.z)
                    })
                end
            end

            UpdateDropdowns()

            WindUI:Notify({
                Title = "üì• Waypoints loaded successfully",
                Content = ": " .. tostring(#Waypoints),
                Icon = "download",
                Duration = 3
            })
        else
            WindUI:Notify({
                Title = "‚ùå Load failed",
                Content = "Failed to read JSON",
                Icon = "x",
                Duration = 4
            })
        end
    else
        WindUI:Notify({
            Title = "Please save Waypoints",
            Content = "No Waypoints has been saved on this map yet.",
            Icon = "folder",
            Duration = 3
        })
    end
end

local Tab2 = Window:Tab({
    Title = "Server",
    Icon = "bird",
    Locked = false,
})
local Section = Tab2:Section({ 
    Title = "Status:",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

Tab:Button({
    Title = "üìã ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å JobId ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô",
    Desc = "‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏Ñ‡∏•‡∏¥‡∏õ‡∏ö‡∏≠‡∏£‡πå‡∏î",
    Callback = function()
        setclipboard(game.JobId)

        WindUI:Notify({
            Title = "üìã ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß",
            Content = "JobId ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß",
            Icon = "clipboard-copy",
            Duration = 3,
        })
    end
})

local JobIdInput = ""

Tab:Textbox({
    Title = "üî§ ‡πÉ‡∏™‡πà JobId",
    Placeholder = "‡∏ß‡∏≤‡∏á JobId ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà...",
    Callback = function(text)
        JobIdInput = text
    end
})

Tab:Button({
    Title = "üöÄ ‡∏ß‡∏≤‡∏£‡πå‡∏õ‡πÑ‡∏õ‡∏¢‡∏±‡∏á JobId",
    Desc = "‡πÄ‡∏ó‡πÄ‡∏•‡∏û‡∏≠‡∏£‡πå‡∏ï‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏™‡πà‡πÑ‡∏ß‡πâ",
    Callback = function()
        if JobIdInput == "" then
            WindUI:Notify({
                Title = "‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡πà‡∏≤‡∏á",
                Content = "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà JobId ‡∏Å‡πà‡∏≠‡∏ô",
                Icon = "alert-circle",
                Duration = 3,
            })
            return
        end

        game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, JobIdInput, game:GetService("Players").LocalPlayer)
    end
})
