local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local petsServiceRemote = ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("PetsService")
local localPlayer = game:GetService("Players").LocalPlayer
local petsFolder = workspace:WaitForChild("PetsPhysical")

local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

WindUI:SetNotificationLower(true)

local Window = WindUI:CreateWindow({
    Title = "Tad Hub | Grow a Graden | 0.0.1",
    Icon = "door-open",
    Author = "By Tad Hub",
    Folder = "TadHub",
    Size = UDim2.fromOffset(550, 350),
    Transparent = true,
    Theme = "Dark",
    Resizable = true,
    SideBarWidth = 200,
    Background = "rbxassetid://139773814737461", -- rbxassetid only
    BackgroundImageTransparency = 0.42,
    HideSearchBar = true,
    ScrollBarEnabled = false,
    User = {
        Enabled = true,
        Anonymous = true,
        Callback = function()
            print("clicked")
        end,
    },
})

Window:EditOpenButton({
    Title = "Open Example UI",
    Icon = "monitor",
    CornerRadius = UDim.new(0,16),
    StrokeThickness = 2,
    Color = ColorSequence.new( -- gradient
        Color3.fromHex("FF0F7B"), 
        Color3.fromHex("F89B29")
    ),
    OnlyMobile = false,
    Enabled = true,
    Draggable = true,
})

Window:IsResizable(true)

Window:SetToggleKey(Enum.KeyCode.H)

local Tab = Window:Tab({
    Title = "Main",
    Icon = "bird",
    Locked = false,
})
local Section = Tab:Section({ 
    Title = "Main",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

local teamNames = {}
if isfolder("PetsTeam") then
    for _, file in ipairs(listfiles("PetsTeam")) do
        local name = file:match("PetsTeam/(.+)%.json")
        if name then
            table.insert(teamNames, name)
        end
    end
end

local LoadTeamDropdown
local DeleteDropdown

local teamName = ""
local selectedTeam = ""
local selectedDeleteTeam = ""

PetnameInput = Tab:Input({
    Title = "Set Pet Team Name",
    Callback = function(text)
        teamName = text
    end
})

local SaveTeamButton = Tab:Button({
    Title = "Save Pet Team",
    Callback = function()
        if teamName == "" then
            return WindUI:Notify({
                Title = "‚ö†Ô∏è Pet Team name is empty",
                Content = "Please enter the team name before saving.",
                Icon = "alert",
                Duration = 3
            })
        end

        local uuids = {}
        for _, petMover in ipairs(petsFolder:GetChildren()) do
            if petMover.Name == "PetMover" then
                local owner = petMover:GetAttribute("OWNER")
                local uuid = petMover:GetAttribute("UUID")
                if owner == localPlayer.Name and uuid then
                    table.insert(uuids, uuid)
                end
            end
        end

        if #uuids == 0 then
            return WindUI:Notify({
                Title = "‚ùå No pets found",
                Content = "No pets in your garden right now.",
                Icon = "cat",
                Duration = 3
            })
        end

        local data = { uuids = uuids }
        local json = HttpService:JSONEncode(data)
        if not isfolder("PetsTeam") then
            makefolder("PetsTeam")
        end
        writefile("PetsTeam/" .. teamName .. ".json", json)

        local found = false
        for _, name in ipairs(teamNames) do
            if name == teamName then
                found = true
                break
            end
        end

        if not found then
            table.insert(teamNames, teamName)
        end

        if LoadTeamDropdown then
            LoadTeamDropdown:Refresh(teamNames)
        end
        if DeleteDropdown then
            DeleteDropdown:Refresh(teamNames)
        end

        WindUI:Notify({
            Title = "‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏µ‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
            Content = "Pet Team '" .. teamName .. "' It has been Save",
            Icon = "save",
            Duration = 3
        })
    end
})

local Section = Tab:Section({ 
    Title = "Load Pet Team",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

LoadTeamDropdown = Tab:Dropdown({
    Title = "Choose a Pet team",
    Values = teamNames,
    Callback = function(option)
        selectedTeam = option
        print("Choose a Pet Team:", selectedTeam)
    end
})

LoadTeam = Tab:Button({
    Title = "Load Pet Team",
    Callback = function()
        if selectedTeam == "" then
            return WindUI:Notify({
                Title = "‚ö†Ô∏è Didn't choose a team",
                Content = "Please select a Pet team before loading.",
                Icon = "alert",
                Duration = 3
            })
        end

        -- Unequip
        for _, petMover in ipairs(petsFolder:GetChildren()) do
            if petMover.Name == "PetMover" then
                local owner = petMover:GetAttribute("OWNER")
                local uuid = petMover:GetAttribute("UUID")
                if owner == localPlayer.Name and uuid then
                    petsServiceRemote:FireServer("UnequipPet", uuid)
                    wait(0.1)
                end
            end
        end

        local success, result = pcall(function()
            return readfile("PetsTeam/" .. selectedTeam .. ".json")
        end)

        if not success then
            return WindUI:Notify({
                Title = "‚ùå Load failed",
                Content = "File not found: " .. selectedTeam,
                Icon = "folder-x",
                Duration = 3
            })
        end

        local data = HttpService:JSONDecode(result)
        for _, uuid in ipairs(data.uuids or {}) do
            petsServiceRemote:FireServer("EquipPet", uuid, CFrame.new(0, 0, 0))
            wait(0.1)
        end

        WindUI:Notify({
            Title = "‚úÖ Pet Team loaded successfully",
            Content = "Pet Team '" .. selectedTeam .. "' ‡∏ñ‡∏π‡∏Å‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡πâ‡∏ß",
            Icon = "download",
            Duration = 3
        })
    end
})

local Section = Tab:Section({ 
    Title = "Delete Pet Team",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

DeleteDropdown = Tab:Dropdown({
    Title = "Select the Pet team to delete.",
    Values = teamNames,
    Callback = function(selected)
        selectedDeleteTeam = selected
    end
})

DeleteButton = Tab:Button({
    Title = "Delete Pet Team",
    Callback = function()
        if selectedDeleteTeam == "" then
            return WindUI:Notify({
                Title = "‚ö†Ô∏è Haven't chosen a pet team yet.",
                Content = "Select a pet team before deleting.",
                Icon = "alert",
                Duration = 3
            })
        end

        local filePath = "PetsTeam/" .. selectedDeleteTeam .. ".json"
        if isfile(filePath) then
            delfile(filePath)

            for i, name in ipairs(teamNames) do
                if name == selectedDeleteTeam then
                    table.remove(teamNames, i)
                    break
                end
            end

            if LoadTeamDropdown then LoadTeamDropdown:Refresh(teamNames) end
            if DeleteDropdown then DeleteDropdown:Refresh(teamNames) end

            selectedDeleteTeam = ""

            WindUI:Notify({
                Title = "üóëÔ∏è Successfully deleted the team.",
                Content = "Pet Team file has been deleted successfully.",
                Icon = "trash",
                Duration = 3
            })
        else
            WindUI:Notify({
                Title = "‚ùå File not found",
                Content = "Unable to delete: File not found.",
                Icon = "folder-x",
                Duration = 3
            })
        end
    end
})
