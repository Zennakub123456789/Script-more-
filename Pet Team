local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

WindUI:SetNotificationLower(true)

local Window = WindUI:CreateWindow({
    Title = "Tad Hub | Grow a Graden | 0.0.1",
    Icon = "door-open",
    Author = "By Tad Hub",
    Folder = "TadHub",
    Size = UDim2.fromOffset(550, 350),
    Transparent = true,
    Theme = "Dark",
    Resizable = true,
    SideBarWidth = 200,
    Background = "", -- rbxassetid only
    BackgroundImageTransparency = 0.42,
    HideSearchBar = true,
    ScrollBarEnabled = false,
    User = {
        Enabled = true,
        Anonymous = true,
        Callback = function()
            print("clicked")
        end,
    },
})

Window:EditOpenButton({
    Title = "Open Example UI",
    Icon = "monitor",
    CornerRadius = UDim.new(0,16),
    StrokeThickness = 2,
    Color = ColorSequence.new( -- gradient
        Color3.fromHex("FF0F7B"), 
        Color3.fromHex("F89B29")
    ),
    OnlyMobile = false,
    Enabled = true,
    Draggable = true,
})

Window:IsResizable(true)

Window:SetToggleKey(Enum.KeyCode.H)

local Tab = Window:Tab({
    Title = "Main",
    Icon = "bird",
    Locked = false,
})
local Section = Tab:Section({ 
    Title = "Main",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local localPlayer = Players.LocalPlayer
local petsFolder = workspace:WaitForChild("PetsPhysical")

-- ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå PetsTeam ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
if not isfolder("PetsTeam") then
    makefolder("PetsTeam")
end

-- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå JSON ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
local function getTeamNames()
    local teams = {}
    for _, file in ipairs(listfiles("PetsTeam")) do
        local name = file:match("PetsTeam/(.+)%.json")
        if name then
            table.insert(teams, name)
        end
    end
    return teams
end

-- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏´‡∏•‡∏±‡∏Å
local teamName = ""
local selectedTeam = ""
local teamNames = getTeamNames()

-- ‡∏ä‡πà‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏°
local PetTeamInput = Tab:Input({
    Title = "‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏°",
    Callback = function(text)
        teamName = text
    end
})

local SaveTeamButton = Tab:Button({
    Title = "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏µ‡∏°",
    Callback = function()
        if teamName == "" then
            warn("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å")
            return
        end

        local uuids = {}
        for _, petMover in ipairs(petsFolder:GetChildren()) do
            if petMover.Name == "PetMover" then
                local owner = petMover:GetAttribute("OWNER")
                local uuid = petMover:GetAttribute("UUID")

                if owner == localPlayer.Name and uuid then
                    table.insert(uuids, uuid)
                end
            end
        end

        if #uuids == 0 then
            warn("‚õî ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡∏™‡∏ß‡∏ô")
            return
        end

        local data = {
            uuids = uuids
        }
        local jsonData = HttpService:JSONEncode(data)
        writefile("PetsTeam/" .. teamName .. ".json", jsonData)

        print("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏µ‡∏° '" .. teamName .. "' ‡πÅ‡∏•‡πâ‡∏ß")

        -- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏µ‡∏°‡πÉ‡∏ô Dropdown ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
        local found = false
        for _, name in ipairs(teamNames) do
            if name == teamName then
                found = true
                break
            end
        end
        if not found then
            table.insert(teamNames, teamName, allTeamNames)
            LoadTeamDropdown:Refresh(allTeamNames)
        end
    end
})

local Section = Tab:Section({ 
    Title = "Load Pet Team",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

local LoadTeamDropdown = Tab:Dropdown({
    Title = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡∏°",
    Values = teamNames,
    Callback = function(option)
        selectedTeam = option
        print("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡∏°:", selectedTeam)
    end
})

local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local petsServiceRemote = ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("PetsService")
local localPlayer = game:GetService("Players").LocalPlayer
local petsFolder = workspace:WaitForChild("PetsPhysical")

local LoadTeamButton = Tab:Button({
    Title = "‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏µ‡∏°",
    Callback = function()
        if selectedTeam == "" or not selectedTeam then
            warn("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡∏°‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î")
            return
        end

        -- 1. Unequip ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡πÉ‡∏ô‡∏™‡∏ß‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        local unequipUUIDs = {}
        for _, petMover in ipairs(petsFolder:GetChildren()) do
            if petMover.Name == "PetMover" then
                local owner = petMover:GetAttribute("OWNER")
                local uuid = petMover:GetAttribute("UUID")
                if owner == localPlayer.Name and uuid then
                    table.insert(unequipUUIDs, uuid)
                end
            end
        end

        if #unequipUUIDs == 0 then
            warn("‚õî ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡πÉ‡∏ô‡∏™‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ")
            return
        end

        for _, uuid in ipairs(unequipUUIDs) do
            local args = {
                [1] = "UnequipPet",
                [2] = uuid
            }
            petsServiceRemote:FireServer(unpack(args))
            print("‚úÖ ‡∏™‡∏±‡πà‡∏á Unequip UUID:", uuid)
            wait(0.1)
        end

        -- 2. ‡πÇ‡∏´‡∏•‡∏î JSON ‡∏ó‡∏µ‡∏°
        local success, jsonData = pcall(function()
            return readfile("PetsTeam/" .. selectedTeam .. ".json")
        end)

        if not success then
            warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡∏°: " .. selectedTeam)
            return
        end

        local data = HttpService:JSONDecode(jsonData)
        local equipUUIDs = data.uuids or {}

        if #equipUUIDs == 0 then
            warn("‚ö†Ô∏è ‡∏ó‡∏µ‡∏°‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ UUID ‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á")
            return
        end

        -- 3. Equip ‡∏ó‡∏µ‡∏•‡∏∞ UUID ‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏≠‡∏á‡∏®‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
        for _, uuid in ipairs(equipUUIDs) do
            local args = {
                [1] = "EquipPet",
                [2] = uuid,
                [3] = CFrame.new(18.795989990234375, 0, -74.50503540039062) * CFrame.Angles(0, 0, 0)
            }
            petsServiceRemote:FireServer(unpack(args))
            print("‚úÖ ‡∏™‡∏±‡πà‡∏á Equip UUID:", uuid)
            wait(0.1)
        end

        print("üéâ ‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏µ‡∏° '" .. selectedTeam .. "' ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå")
    end
})

local Section = Tab:Section({ 
    Title = "Delete Pet Team",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

local selectedDeleteTeam = ""

-- Dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö
local DeleteDropdown = Tab:Dropdown({
    Title = "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö",
    Values = teamNames,
    Callback = function(selected)
        selectedDeleteTeam = selected
        print("üóëÔ∏è ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏•‡∏ö‡∏ó‡∏µ‡∏°: " .. selected)
    end
})

local RefreshDeleteButton = Tab:Button({
    Title = "‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏ó‡∏µ‡∏°‡πÉ‡∏ô Dropdown ‡∏•‡∏ö‡∏ó‡∏µ‡∏°",
    Callback = function()
        -- ‡πÇ‡∏´‡∏•‡∏î‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏à‡∏≤‡∏Å‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå PetsTeam
        local newTeamNames = {}
        if isfolder("PetsTeam") then
            for _, file in ipairs(listfiles("PetsTeam")) do
                local name = file:match("PetsTeam/(.+)%.json")
                if name then
                    table.insert(newTeamNames, name)
                end
            end
        end

        -- ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏°‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä Dropdown
        deleteTeamNames = newTeamNames
        DeleteDropdown:Refresh(deleteTeamNames)

        print("üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä Dropdown ‡∏•‡∏ö‡∏ó‡∏µ‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
    end
})

local DeleteButton = Tab:Button({
    Title = "‡∏•‡∏ö‡∏ó‡∏µ‡∏°",
    Callback = function()
        if selectedDeleteTeam == "" then
            WindUI:Notify({
                Title = "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡∏°",
                Content = "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡∏•‡∏ö‡πÑ‡∏î‡πâ",
                Icon = "alert",
                Duration = 3
            })
            return
        end

        local filePath = "PetsTeam/" .. selectedDeleteTeam .. ".json"

        if isfile(filePath) then
            delfile(filePath)
            print("‚úÖ ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " .. selectedDeleteTeam)

            -- ‡∏•‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡∏°‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä Dropdown
            for i, name in ipairs(teamNames) do
                if name == selectedDeleteTeam then
                    table.remove(teamNames, i)
                    break
                end
            end
            LoadTeamDropdown:Refresh(allTeamNames)
            DeleteDropdown:Refresh(allTeamNames)

            WindUI:Notify({
                Title = "üóëÔ∏è ‡∏•‡∏ö‡∏ó‡∏µ‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                Content = "‡∏ó‡∏µ‡∏° '" .. selectedDeleteTeam .. "' ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
                Icon = "trash",
                Duration = 4
            })

            selectedDeleteTeam = ""
        else
            WindUI:Notify({
                Title = "‚ùå ‡∏•‡∏ö‡∏ó‡∏µ‡∏°‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß",
                Content = "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå: " .. filePath,
                Icon = "folder-x",
                Duration = 4
            })
        end
    end
})
